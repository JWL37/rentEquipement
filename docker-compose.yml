services:
  backend:
    image: rent_app
    container_name: super_app
    build:
      context: .
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
  postgres:
    image: postgres
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d postgresDB"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - './migrations/:/docker-entrypoint-initdb.d/'
    # command: ["postgres", "-c", "log_statement=all"] 
    
  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    volumes:
      - redis-data:/data
    
volumes:
  redis-data:
    